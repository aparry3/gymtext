/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Json = JsonValue;

export type JsonArray = JsonValue[];

export type JsonObject = {
  [x: string]: JsonValue | undefined;
};

export type JsonPrimitive = boolean | number | string | null;

export type JsonValue = JsonArray | JsonObject | JsonPrimitive;

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface Conversations {
  createdAt: Generated<Timestamp>;
  id: Generated<string>;
  lastMessageAt: Timestamp;
  messageCount: Generated<number>;
  metadata: Generated<Json | null>;
  startedAt: Timestamp;
  status: Generated<string>;
  updatedAt: Generated<Timestamp>;
  userId: string;
}

export interface ConversationTopics {
  confidence: number;
  conversationId: string;
  createdAt: Generated<Timestamp>;
  id: Generated<string>;
  topic: string;
}

export interface FitnessPlans {
  clientId: string;
  createdAt: Generated<Timestamp>;
  goalStatement: string | null;
  id: Generated<string>;
  macrocycles: Json;
  overview: string | null;
  programType: string;
  startDate: Timestamp;
  updatedAt: Generated<Timestamp>;
}

export interface FitnessProfiles {
  age: number;
  createdAt: Generated<Timestamp>;
  exerciseFrequency: string;
  fitnessGoals: string;
  gender: string;
  id: Generated<string>;
  skillLevel: string;
  updatedAt: Generated<Timestamp>;
  userId: string;
}

export interface Mesocycles {
  clientId: string;
  createdAt: Generated<Timestamp>;
  cycleOffset: number;
  fitnessPlanId: string;
  id: Generated<string>;
  lengthWeeks: number;
  phase: string;
  startDate: Timestamp;
  status: Generated<string>;
  updatedAt: Generated<Timestamp>;
}

export interface Messages {
  content: string;
  conversationId: string;
  createdAt: Generated<Timestamp>;
  direction: string;
  id: Generated<string>;
  metadata: Generated<Json | null>;
  phoneFrom: string;
  phoneTo: string;
  twilioMessageSid: string | null;
  userId: string;
}

export interface Microcycles {
  actualMetrics: Json | null;
  clientId: string;
  createdAt: Generated<Timestamp>;
  cycleOffset: number;
  endDate: Timestamp;
  fitnessPlanId: string;
  id: Generated<string>;
  mesocycleId: string;
  startDate: Timestamp;
  status: Generated<string>;
  targets: Json | null;
  updatedAt: Generated<Timestamp>;
  weekNumber: number;
}

export interface Subscriptions {
  canceledAt: Timestamp | null;
  createdAt: Generated<Timestamp>;
  currentPeriodEnd: Timestamp;
  currentPeriodStart: Timestamp;
  id: Generated<string>;
  planType: string;
  status: string;
  stripeSubscriptionId: string;
  updatedAt: Generated<Timestamp>;
  userId: string;
}

export interface Users {
  createdAt: Generated<Timestamp>;
  email: string | null;
  id: Generated<string>;
  name: string;
  phoneNumber: string;
  stripeCustomerId: string | null;
  updatedAt: Generated<Timestamp>;
}

export interface WorkoutInstances {
  alterations: Json | null;
  clientId: string;
  completedAt: Timestamp | null;
  createdAt: Generated<Timestamp>;
  date: Timestamp;
  details: Json;
  feedback: Json | null;
  fitnessPlanId: string;
  goal: string | null;
  id: Generated<string>;
  mesocycleId: string;
  metrics: Json | null;
  microcycleId: string;
  sessionType: string;
  status: Generated<string>;
  updatedAt: Generated<Timestamp>;
}

export interface WorkoutLogs {
  completed: Generated<boolean>;
  completedAt: Timestamp | null;
  createdAt: Generated<Timestamp>;
  feedback: string | null;
  id: Generated<string>;
  rating: number | null;
  userId: string;
  workoutId: string;
}

export interface Workouts {
  createdAt: Generated<Timestamp>;
  date: Timestamp;
  exercises: Json;
  id: Generated<string>;
  sentAt: Timestamp | null;
  userId: string;
  workoutType: string;
}

export interface DB {
  conversations: Conversations;
  conversationTopics: ConversationTopics;
  fitnessPlans: FitnessPlans;
  fitnessProfiles: FitnessProfiles;
  mesocycles: Mesocycles;
  messages: Messages;
  microcycles: Microcycles;
  subscriptions: Subscriptions;
  users: Users;
  workoutInstances: WorkoutInstances;
  workoutLogs: WorkoutLogs;
  workouts: Workouts;
}
